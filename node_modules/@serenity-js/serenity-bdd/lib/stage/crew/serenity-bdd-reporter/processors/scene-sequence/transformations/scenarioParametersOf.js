"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.scenarioParametersOf = void 0;
function scenarioParametersOf(scenario, parameters) {
    function descriptorFor(dataTable) {
        const parameterSetDescription = parameters.description && parameters.description.value;
        const existingDescriptor = dataTable.dataSetDescriptors
            .find(descriptor => descriptor.name === parameters.name.value && descriptor.description === parameterSetDescription);
        if (existingDescriptor) {
            return existingDescriptor;
        }
        const newDescriptor = {
            name: parameters.name.value,
            description: parameters.description && parameters.description.value,
            startRow: dataTable.dataSetDescriptors.reduce((acc, current) => acc + current.rowCount, 0),
            rowCount: 0,
        };
        dataTable.dataSetDescriptors.push(newDescriptor);
        return newDescriptor;
    }
    return (context) => {
        const headers = Object.keys(parameters.values);
        const dataTable = context.report.dataTable;
        dataTable.headers = headers;
        descriptorFor(dataTable).rowCount++;
        context.report.dataTable.rows.push({
            values: Object.values(parameters.values),
        });
        context.parameters.push({ parameters, line: scenario.location.line });
        return context;
    };
}
exports.scenarioParametersOf = scenarioParametersOf;
//# sourceMappingURL=scenarioParametersOf.js.map