"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SerenityBDDArguments = void 0;
const core_1 = require("@serenity-js/core");
/**
 * @package
 */
class SerenityBDDArguments extends core_1.Question {
    static from(argv) {
        return new SerenityBDDArguments(argv);
    }
    constructor(argv) {
        super();
        this.argv = argv;
        this.subject = 'Serenity BDD arguments';
    }
    answeredBy(actor) {
        return Object.keys(this.argv)
            .filter(key => !!~SerenityBDDArguments.Allowed.indexOf(key) && !!this.argv[key])
            .flatMap(arg => [`--${arg}`, this.argv[arg]]);
    }
    /**
     * @desc
     *  Changes the description of this question's subject.
     *
     * @param {string} subject
     * @returns {Question<T>}
     */
    describedAs(subject) {
        this.subject = subject;
        return this;
    }
    toString() {
        return this.subject;
    }
}
exports.SerenityBDDArguments = SerenityBDDArguments;
SerenityBDDArguments.Allowed = [
    'destination',
    'features',
    'issueTrackerUrl',
    'jiraProject',
    'jiraUrl',
    'project',
    'source',
];
//# sourceMappingURL=SerenityBDDArguments.js.map