import { Answerable, AnswersQuestions, CollectsArtifacts, Interaction, UsesAbilities } from '@serenity-js/core';
import { AxiosRequestConfig } from 'axios';
/**
 * Sends a {@apilink HTTPRequest} to a specified url.
 *
 * The response to the request is made available via {@apilink LastResponse}.
 *
 * ## Send a GET request
 *
 * ```ts
 * import { actorCalled } from '@serenity-js/core'
 * import { CallAnApi, GetRequest, LastResponse, Send } from '@serenity-js/rest'
 * import { Ensure, equals } from '@serenity-js/assertions'
 *
 * await actorCalled('Apisit')
 *   .whoCan(CallAnApi.at('https://api.example.org/'))
 *   .attemptsTo(
 *     Send.a(GetRequest.to('/books/0-688-00230-7')),
 *     Ensure.that(LastResponse.status(), equals(200)),
 *   )
 * ```
 *
 * @group Activities
 */
export declare class Send extends Interaction {
    private readonly request;
    /**
     * Instantiates a new {@apilink Interaction|interaction} to {@apilink Send}.
     *
     * #### Learn more
     * - [AxiosRequestConfig](https://github.com/axios/axios/blob/v0.27.2/index.d.ts#L75-L113)
     *
     * @param request
     */
    static a(request: Answerable<AxiosRequestConfig>): Interaction;
    /**
     * @param request
     */
    protected constructor(request: Answerable<AxiosRequestConfig>);
    /**
     * @inheritDoc
     */
    performAs(actor: UsesAbilities & CollectsArtifacts & AnswersQuestions): Promise<void>;
    private responseToArtifact;
    private requestToArtifactName;
}
//# sourceMappingURL=Send.d.ts.map